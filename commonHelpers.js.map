{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]')\nconst day = document.querySelector('[data-days]')\nconst hour = document.querySelector('[data-hours]')\nconst minute = document.querySelector('[data-minutes]')\nconst second = document.querySelector('[data-seconds]')\n\nlet userSelectedDate;\nstartBtn.disabled = true;\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (options.defaultDate >= selectedDates[0]) {\n        iziToast.error({\n            title: 'ERROR',\n            message: 'Please choose a date in the future',\n        });\n    //   alert('Please choose a date in the future');\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n    console.log(selectedDates[0]);\n  },\n};\n\nstartBtn.addEventListener('click', () => {\nconst countdown = setInterval(() => {\n    const timeLaps = userSelectedDate - Date.now();\n    const result = convertMs(timeLaps);\n    const {days, hours, minutes, seconds} = result;\n    day.textContent = addLeadingZero(days);\n    hour.textContent = addLeadingZero(hours);\n    minute.textContent = addLeadingZero(minutes);\n    second.textContent = addLeadingZero(seconds);\n    if (timeLaps < 1000) {\n    clearInterval(countdown);\n    }\n}, 1000);\n});\n\nflatpickr('#datetime-picker', options);"],"names":["startBtn","day","hour","minute","second","userSelectedDate","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","options","selectedDates","iziToast","countdown","timeLaps","result","flatpickr"],"mappings":"2GAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAM,SAAS,cAAc,aAAa,EAC1CC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAS,SAAS,cAAc,gBAAgB,EAEtD,IAAIC,EACJL,EAAS,SAAW,GAEpB,SAASM,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBD,EAAQ,aAAeC,EAAc,IACrCC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACrB,CAAS,EAEHhB,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBK,EAAmBU,EAAc,IAEnC,QAAQ,IAAIA,EAAc,EAAE,CAC7B,CACH,EAEAf,EAAS,iBAAiB,QAAS,IAAM,CACzC,MAAMiB,EAAY,YAAY,IAAM,CAChC,MAAMC,EAAWb,EAAmB,KAAK,IAAG,EACtCc,EAASb,EAAUY,CAAQ,EAC3B,CAAC,KAAAV,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAIQ,EACxClB,EAAI,YAAcW,EAAeJ,CAAI,EACrCN,EAAK,YAAcU,EAAeH,CAAK,EACvCN,EAAO,YAAcS,EAAeF,CAAO,EAC3CN,EAAO,YAAcQ,EAAeD,CAAO,EACvCO,EAAW,KACf,cAAcD,CAAS,CAE3B,EAAG,GAAI,CACP,CAAC,EAEDG,EAAU,mBAAoBN,CAAO"}